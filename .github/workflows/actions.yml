name: CI/CD to ECR and EC2

on:
  push:
    branches: [ "feature/api" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Run Unit Tests
      run: |
        pip install -r requirements.txt
        pytest

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, Tag and Push Docker Image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: rania30111  
      run: |
        docker build -t churn-prediction:$IMAGE_TAG .
        docker tag churn-prediction:$IMAGE_TAG $ECR_REGISTRY/churn-prediction:$IMAGE_TAG
        docker push $ECR_REGISTRY/churn-prediction:$IMAGE_TAG

    - name: Deploy to EC2 via SSH
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          mkdir -p ~/rania
          cd ~/rania
          git clone https://github.com/RRGrania/MLOps-Course-Labs.git
          cd MLOps-Course-Labs
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
          docker-compose down || true
          docker-compose pull
          docker-compose up -d
